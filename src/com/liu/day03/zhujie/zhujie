自定义注解

格式：
public @interface 注解名{
    //内容
}

本质上是一个接口，所有注解都会继承一个接口:Annotation

注解的使用
//无属性注解
@注解名
eg：@Test

//有属性注解
@注解名（属性=值，属性=值）

元注解
（会用Target和Retention）
元注解用来约束自定义注解的适用范围和生命周期
@Target
作用：指明此注解用在哪个位置，如果不写默认是任何地方都可以使用
可选参数值：
TYPE:用在类，接口上
FIELD：用在成员方法上
METHOD：用在方法上
PARAMETER：用在参数上
CONSTRUCTOR：用在构造方法上
LOCAL_VARIABLE：用在局部变量上

@Retention
作用：定义该注解的生命周期
可选参数值：
SOURCE:注解只存在于java源代码中，编译生成的字节码文件中就不存在了
使用场景：针对一些检查性的操作
CLASS：注解存在于java源代码、编译以后的字节码文件中，运行的时候内存中没有默认值
使用场景：在编译时进行一些预处理操作
RUNTIME：注解存在于Java源代码中、编译以后的字节码文件中、运行时内存中，程序可以通过反射获取该注解
使用场景：要在运行时去动态获取注解信息，只能用RUNTIME注解